using FluentNHibernate.Mapping;
using Psps.Models.Domain;
using System;
using System.Collections.Generic;
using System.Text;

namespace Psps.Data.Mappings
{
    public partial class FdDocViewMap : BaseEntityMap<FdDocView, int>
    {
        protected override void MapId()
        {
            Id(x => x.FdMasterId).GeneratedBy.Identity().Column("FdMasterId");
        }

        protected override void MapEntity()
        {
            Map(x => x.DocumentDate).Column("DocumentDate").Not.Nullable();
            Map(x => x.ThreeWeekAfterDocumentDate).Column("ThreeWeekAfterDocumentDate").Not.Nullable();
            Map(x => x.FdMasterId).Column("FdMasterId").Not.Nullable().Precision(10);
            Map(x => x.OrgId).Column("OrgId").Not.Nullable().Precision(10);
            Map(x => x.EngOrgName).Column("EngOrgName").Not.Nullable().Length(256);
            Map(x => x.ChiOrgName).Column("ChiOrgName").Not.Nullable().Length(100);
            Map(x => x.EngRegisteredAddress1).Column("EngRegisteredAddress1");
            Map(x => x.EngRegisteredAddress2).Column("EngRegisteredAddress2");
            Map(x => x.EngRegisteredAddress3).Column("EngRegisteredAddress3");
            Map(x => x.EngRegisteredAddress4).Column("EngRegisteredAddress4");
            Map(x => x.EngRegisteredAddress5).Column("EngRegisteredAddress5");
            Map(x => x.EngRegisteredAddressFull).Column("EngRegisteredAddressFull");
            Map(x => x.ChiRegisteredAddress1).Column("ChiRegisteredAddress1");
            Map(x => x.ChiRegisteredAddress2).Column("ChiRegisteredAddress2");
            Map(x => x.ChiRegisteredAddress3).Column("ChiRegisteredAddress3");
            Map(x => x.ChiRegisteredAddress4).Column("ChiRegisteredAddress4");
            Map(x => x.ChiRegisteredAddress5).Column("ChiRegisteredAddress5");
            Map(x => x.ChiRegisteredAddressFull).Column("ChiRegisteredAddressFull");
            Map(x => x.EngMailingAddress1).Column("EngMailingAddress1").Length(200);
            Map(x => x.EngMailingAddress2).Column("EngMailingAddress2").Length(200);
            Map(x => x.EngMailingAddress3).Column("EngMailingAddress3").Length(200);
            Map(x => x.EngMailingAddress4).Column("EngMailingAddress4").Length(200);
            Map(x => x.EngMailingAddress5).Column("EngMailingAddress5").Length(200);
            Map(x => x.EngMailingAddressFull).Column("EngMailingAddressFull");
            Map(x => x.ChiMailingAddress1).Column("ChiMailingAddress1").Length(50);
            Map(x => x.ChiMailingAddress2).Column("ChiMailingAddress2").Length(50);
            Map(x => x.ChiMailingAddress3).Column("ChiMailingAddress3").Length(50);
            Map(x => x.ChiMailingAddress4).Column("ChiMailingAddress4").Length(50);
            Map(x => x.ChiMailingAddress5).Column("ChiMailingAddress5").Length(50);
            Map(x => x.ChiMailingAddressFull).Column("ChiMailingAddressFull");
            Map(x => x.TelNum).Column("TelNum").Length(50);
            Map(x => x.URL).Column("URL").Length(256);
            Map(x => x.ApplicantFirstName).Column("ApplicantFirstName");
            Map(x => x.ApplicantLastName).Column("ApplicantLastName");
            Map(x => x.ApplicantChiFirstName).Column("ApplicantChiFirstName");
            Map(x => x.ApplicantChiLastName).Column("ApplicantChiLastName");
            Map(x => x.ApplicantPosition).Column("ApplicantPosition");
            Map(x => x.ApplicantSalute).Column("ApplicantSalute");
            Map(x => x.ApplicantChiSalute).Column("ApplicantChiSalute");
            Map(x => x.ApplicantTelNum).Column("ApplicantTelNum");
            Map(x => x.OrgFaxNum).Column("OrgFaxNum");
            Map(x => x.FdRef).Column("FdRef").Not.Nullable().Length(12);
            Map(x => x.FdRefNo).Column("FdRefNo").Not.Nullable().Length(3);
            Map(x => x.PermitNum).Column("PermitNum").Length(12);
            Map(x => x.ApplicationReceiveDate).Column("ApplicationReceiveDate");
            Map(x => x.EngUsedLanguage).Column("EngUsedLanguage").Length(200);
            Map(x => x.ChiUsedLanguage).Column("ChiUsedLanguage").Length(200);
            Map(x => x.ContactPersonSalute).Column("ContactPersonSalute");
            Map(x => x.ContactPersonFirstName).Column("ContactPersonFirstName");
            Map(x => x.ContactPersonLastName).Column("ContactPersonLastName");
            Map(x => x.ContactPersonChiSalute).Column("ContactPersonChiSalute");
            Map(x => x.ContactPersonChiLastName).Column("ContactPersonChiLastName");
            Map(x => x.ContactPersonChiFirstName).Column("ContactPersonChiFirstName");
            Map(x => x.ContactPersonName).Column("ContactPersonName").Length(352);
            Map(x => x.ContactPersonChineseName).Column("ContactPersonChineseName").Length(215);
            Map(x => x.ContactPersonPosition).Column("ContactPersonPosition").Length(100);
            Map(x => x.ContactPersonTelNum).Column("ContactPersonTelNum").Length(50);
            Map(x => x.ContactPersonFaxNum).Column("ContactPersonFaxNum").Length(50);
            Map(x => x.ContactPersonEmailAddress).Column("ContactPersonEmailAddress").Length(100);
            Map(x => x.FundRaisingPurpose).Column("FundRaisingPurpose").Length(4000);
            Map(x => x.ChiFundRaisingPurpose).Column("ChiFundRaisingPurpose").Length(4000);
            Map(x => x.ApplyForTwr).Column("ApplyForTwr").Length(20);
            Map(x => x.EngApplyForTwr).Column("EngApplyForTwr").Length(200);
            Map(x => x.ChiApplyForTwr).Column("ChiApplyForTwr").Length(200);
            Map(x => x.FlagDay).Column("FlagDay");
            Map(x => x.TWR).Column("TWR").Length(20);
            Map(x => x.PermitIssueDate).Column("PermitIssueDate");
            Map(x => x.EngTWR).Column("EngTWR").Length(200);
            Map(x => x.ChiTWR).Column("ChiTWR").Length(200);
            Map(x => x.TwrDistrict).Column("TwrDistrict").Length(20);
            Map(x => x.EngTwrDistrict).Column("EngTwrDistrict").Length(200);
            Map(x => x.ChiTwrDistrict).Column("ChiTwrDistrict").Length(200);
            Map(x => x.EngApplicationResult).Column("EngApplicationResult").Length(200);
            Map(x => x.ChiApplicationResult).Column("ChiApplicationResult").Length(200);
            Map(x => x.VettingPanelCaseIndicator).Column("VettingPanelCaseIndicator");
            Map(x => x.ReviewCaseIndicator).Column("ReviewCaseIndicator");
            Map(x => x.FdYear).Column("FdYear").Length(5);
            Map(x => x.FdYearChi).Column("FdYearChi").Length(4000);
            Map(x => x.FdYear1st).Column("FdYear1st").Length(2);
            Map(x => x.FdYear1stDateFormat).Column("FdYear1stDateFormat");
            Map(x => x.FdYearHeaderFormat).Column("FdYearHeaderFormat").Length(5);
            Map(x => x.LotGroup).Column("LotGroup").Length(5);
            Map(x => x.EngFdCategory).Column("EngFdCategory").Length(200);
            Map(x => x.ChiFdCategory).Column("ChiFdCategory").Length(200);
            Map(x => x.EngFdDistrict).Column("EngFdDistrict").Length(200);
            Map(x => x.ChiFdDistrict).Column("ChiFdDistrict").Length(200);
            Map(x => x.TargetIncome).Column("TargetIncome").Precision(10).Scale(2);
            Map(x => x.TargetIncomeCurrencyFormat).Column("TargetIncomeCurrencyFormat");
            Map(x => x.TargetIncomeChi).Column("TargetIncomeChi");
            Map(x => x.NewApplicantIndicator).Column("NewApplicantIndicator");
            Map(x => x.TrackRecordStartDate).Column("TrackRecordStartDate");
            Map(x => x.TrackRecordEndDate).Column("TrackRecordEndDate");
            Map(x => x.TrackRecordDetails).Column("TrackRecordDetails").Length(4000);
            Map(x => x.AfsRecordStartDate).Column("AfsRecordStartDate");
            Map(x => x.AfsRecordEndDate).Column("AfsRecordEndDate");
            Map(x => x.AfsRecordDetails).Column("AfsRecordDetails").Length(4000);
            Map(x => x.EngFdGroup).Column("EngFdGroup").Length(200);
            Map(x => x.ChiFdGroup).Column("ChiFdGroup").Length(200);
            Map(x => x.FdGroupPercentage).Column("FdGroupPercentage").Precision(5).Scale(2);
            Map(x => x.GroupingResult).Column("GroupingResult").Length(2000);
            Map(x => x.JointApplicationIndicator).Column("JointApplicationIndicator");
            Map(x => x.Section88Indicator).Column("Section88Indicator");
            Map(x => x.CommunityChest).Column("CommunityChest");
            Map(x => x.ConsentLetter).Column("ConsentLetter");
            Map(x => x.ApplicationRemark).Column("ApplicationRemark").Length(4000);
            Map(x => x.FdLotNum).Column("FdLotNum").Precision(10);
            Map(x => x.EngFdLotResult).Column("EngFdLotResult").Length(200);
            Map(x => x.ChiFdLotResult).Column("ChiFdLotResult").Length(200);
            Map(x => x.PriorityNum).Column("PriorityNum").Length(100);
            Map(x => x.AcknowledgementReceiveDate).Column("AcknowledgementReceiveDate");
            Map(x => x.ApplyPledgingMechanismIndicator).Column("ApplyPledgingMechanismIndicator");
            Map(x => x.PledgedAmt).Column("PledgedAmt").Precision(10).Scale(2);
            Map(x => x.PledgedAmtCurrencyFormat).Column("PledgedAmtCurrencyFormat");
            Map(x => x.PledgedAmtChi).Column("PledgedAmtChi");
            Map(x => x.PledgingAmt).Column("PledgingAmt").Precision(12).Scale(2);
            Map(x => x.PledgingAmtCurrencyFormat).Column("PledgingAmtCurrencyFormat");
            Map(x => x.PledgingAmtChi).Column("PledgingAmtChi");
            Map(x => x.PledgingProposal).Column("PledgingProposal").Length(4000);
            Map(x => x.ChiPledgingProposal).Column("ChiPledgingProposal").Length(4000);
            Map(x => x.PledgingApplicationRemark).Column("PledgingApplicationRemark").Length(4000);
            Map(x => x.EngDocSubmission).Column("EngDocSubmission");
            Map(x => x.ChiDocSubmission).Column("ChiDocSubmission");
            Map(x => x.SubmissionDueDate).Column("SubmissionDueDate");
            Map(x => x.FirstReminderIssueDate).Column("FirstReminderIssueDate");
            Map(x => x.FirstReminderDeadline).Column("FirstReminderDeadline");
            Map(x => x.SecondReminderIssueDate).Column("SecondReminderIssueDate");
            Map(x => x.SecondReminderDeadline).Column("SecondReminderDeadline");
            Map(x => x.AuditReportReceivedDate).Column("AuditReportReceivedDate").Length(100);
            Map(x => x.PublicationReceivedDate).Column("PublicationReceivedDate").Length(100);
            Map(x => x.DocReceiveRemark).Column("DocReceiveRemark").Length(4000);
            Map(x => x.DocRemark).Column("DocRemark").Length(4000);
            Map(x => x.StreetCollection).Column("StreetCollection").Precision(12).Scale(2);
            Map(x => x.StreetCollectionCurrencyFormat).Column("StreetCollectionCurrencyFormat");
            Map(x => x.StreetCollectionChi).Column("StreetCollectionChi");
            Map(x => x.GrossProceed).Column("GrossProceed").Precision(12).Scale(2);
            Map(x => x.GrossProceedCurrencyFormat).Column("GrossProceedCurrencyFormat");
            Map(x => x.GrossProceedChi).Column("GrossProceedChi");
            Map(x => x.Expenditure).Column("Expenditure").Precision(12).Scale(2);
            Map(x => x.ExpenditureCurrencyFormat).Column("ExpenditureCurrencyFormat");
            Map(x => x.ExpenditureChi).Column("ExpenditureChi");
            Map(x => x.NetProceed).Column("NetProceed").Precision(12).Scale(2);
            Map(x => x.NetProceedCurrencyFormat).Column("NetProceedCurrencyFormat");
            Map(x => x.NetProceedChi).Column("NetProceedChi");
            Map(x => x.ExpenditurePerGrossProceed).Column("ExpenditurePerGrossProceed");
            Map(x => x.NewspaperPublishDate).Column("NewspaperPublishDate");
            Map(x => x.AcknowledgementEmailIssueDate).Column("AcknowledgementEmailIssueDate");
            Map(x => x.AfsReceiveIndicator).Column("AfsReceiveIndicator");
            Map(x => x.RequestPermitteeIndicator).Column("RequestPermitteeIndicator");
            Map(x => x.AfsReSubmitIndicator).Column("AfsReSubmitIndicator");
            Map(x => x.AfsReminderIssueIndicator).Column("AfsReminderIssueIndicator");
            Map(x => x.WithholdingListIndicator).Column("WithholdingListIndicator");
            Map(x => x.WithholdingBeginDate).Column("WithholdingBeginDate");
            Map(x => x.WithholdingEndDate).Column("WithholdingEndDate");
            Map(x => x.Remark).Column("Remark").Length(4000);
            Map(x => x.EngEOLF2Name).Column("EngEOLF2Name").Length(50);
            Map(x => x.ChiEOLF2Name).Column("ChiEOLF2Name").Length(50);
            Map(x => x.EngEOIILF5Name).Column("EngEOIILF5Name").Length(50);
            Map(x => x.ChiEOIILF5Name).Column("ChiEOIILF5Name").Length(50);
            Map(x => x.EngCEOLFName).Column("EngCEOLFName").Length(50);
            Map(x => x.ChiCEOLFName).Column("ChiCEOLFName").Length(50);
            Map(x => x.LastFdYear).Column("LastFdYear");
            Map(x => x.LastFdYearChi).Column("LastFdYearChi");
            Map(x => x.LastFlagDay).Column("LastFlagDay");
            Map(x => x.LastNetProceed).Column("LastNetProceed");
            Map(x => x.LastNetProceedCurrencyFormat).Column("LastNetProceedCurrencyFormat");
            Map(x => x.LastNetProceedChi).Column("LastNetProceedChi");
            Map(x => x.Past1FdYear).Column("Past1FdYear");
            Map(x => x.Past2FdYear).Column("Past2FdYear");
            Map(x => x.Past3FdYear).Column("Past3FdYear");
            Map(x => x.EligibleInCurrentYear).Column("EligibleInCurrentYear");
            Map(x => x.EligibleInPast1Year).Column("EligibleInPast1Year");
            Map(x => x.EligibleInPast2Year).Column("EligibleInPast2Year");
            Map(x => x.EligibleInPast3Year).Column("EligibleInPast3Year");
            Map(x => x.AllEligibleIn3Year).Column("AllEligibleIn3Year");
            Map(x => x.Next1stFdYearDateFormat).Column("Next1stFdYearDateFormat");
            Map(x => x.Next2ndFdYearDateFormat).Column("Next2ndFdYearDateFormat");
            Map(x => x.Next3rdFdYearDateFormat).Column("Next3rdFdYearDateFormat");
            Map(x => x.Next4thFdYearDateFormat).Column("Next4thFdYearDateFormat");
            Map(x => x.BenchmarkRFD).Column("BenchmarkRFD");
            Map(x => x.BenchmarkTWFD).Column("BenchmarkTWFD");
        }
    }
}