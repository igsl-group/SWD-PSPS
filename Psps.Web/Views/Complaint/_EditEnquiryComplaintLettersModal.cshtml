@model Psps.Web.ViewModels.Complaint.ComplaintDocViewModel
<div class="tab-pane" id="letters">
    <table id="template-result-data-table" class="table table-bordered table-hover table-condensed data-table"></table>
    <div id="templateGridPager"></div>
</div>

<script type="text/javascript">
    var listComplaintTemplateTabUrl = '@Url.RouteUrl("ListComplaintTemplateTab")';
    var generateTemplateUrl = '@Url.RouteUrl("GenerateComplaintTemplate", new { complaintDocId = -1, id = -2 })';

    function initTemplateGrid() {
        var $grid = $('#template-result-data-table');
        var pager_selector = '#templateGridPager';
        var actionUrl = listComplaintTemplateTabUrl;

        if ($grid.isJqGrid()) {
            $grid.resetJqGrid(actionUrl);
            return;
        }

        $grid.jqGrid({
            pager: pager_selector,
            sortname: 'docNum',
            sortorder: 'asc',
            url: actionUrl,
            datatype: 'json',
            colNames: [
                '@Html.DisplayNameFor(m => m.File)',
                '@Html.DisplayNameFor(m => m.Description)',
                '@Html.DisplayNameFor(m => m.RowVersion)',
                '@Html.DisplayNameFor(m => m.ComplaintDocId)',
                'Action'
            ],
            colModel: [{
                name: 'docNum',
                width: 10
            }, {
                name: 'docName',
                width: 180
            }, {
                name: 'rowVersion',
                hidden: true
            }, {
                name: 'complaintDocId',
                hidden: true
            }, {
                name: 'rowAction',
                template: rowActionTemplate,
                delbutton: false,
                width: '120'
            }],
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updateActionIcons(table);
                    updatePagerIcons(table);
                    enableTooltips(table);
                }, 0);
                var iCol = getColumnIndexByName($grid, 'rowAction');
                $(this).find(">tbody>tr.jqgrow>td:nth-child(" + (iCol + 1) + ")")
                    .each(function () {
                        var $this = $(this);
                        //Generate document button
                        $("<div>", {
                            title: "Generate",
                            mouseover: function () {
                                $this.addClass('ui-state-hover');
                            },
                            mouseout: function () {
                                $this.removeClass('ui-state-hover');
                            },
                            click: function (e) {
                                var rowId = $(e.target).closest("tr.jqgrow").attr("id");
                                var data = $grid.jqGrid('getRowData', rowId);
                                generateTemplate(data);
                            }
                        }).css({
                            "margin-right": "5px",
                            float: "left",
                            cursor: "pointer"
                        }).addClass("ui-pg-div ui-inline-custom")
                            .append('<span class="icon-print btn btn-sm btn-primary">&nbsp;Generate</span>')
                            .prependTo($this.children("div"));

                    });
            },
        });

        //navButtons
        $grid.jqGrid('navGrid', pager_selector, {
            //navbar options
            search: true,
            refresh: true
        }, {}, {}, {}, {
            //search form
            recreateForm: true,
            afterShowSearch: defaultSearchFormAfterShowSearch,
            afterRedraw: defaultSearchFormAfterRedraw
        }, {});

        function generateTemplate(data) {
            var actionUrl = generateTemplateUrl.replace("-1", data.complaintDocId).replace("-2", $("#complaintMasterId").val());
            var win = window.open(actionUrl);
        };
    };
</script>