@model Psps.Web.ViewModels.UserLogs.UserLogViewModel
@using Psps.Resources;

@{
    ViewBag.Title = Labels.UserLog_Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form id="userLogForm" class="form-horizontal" role="form">
    <div class="form-group">
        <div class="col-xs-12">
            <div class="grid-stretch-container">
                <table id="userLogGridTable"></table>
                <div id="userLogGridPager"></div>
            </div>
        </div>
    </div>
</form>

@section scripts {
    <!-- inline scripts related to this page -->
    <script type="text/javascript">
        var listUserLogUrl = '@Url.RouteUrl("ListUserLog")';

        $(function () {
            initUserLogGrid();

            $('#btnUpdateUserLog').click(function () {
                if ($("#userLogForm").valid()) {
                    var actionUrl = editUserLogUrl.replace('-1', $('#logId').val());

                    ajaxPost(actionUrl,
                         $('#userLogForm').serialize(),
                         function (response) {
                             $('#editModal').modal('hide');
                             $("#userLogGridTable").trigger("reloadGrid", [{ current: true }]);
                             notifSuccess(response.message);
                         }
                    );
                }
            });

        });

        function initUserLogGrid() {
            var $grid = $('#userLogGridTable');
            var pager_selector = '#userLogGridPager';

            $grid.jqGrid({
                pager: pager_selector,
                sortname: 'actionedOn',
                sortorder: 'desc',
                url: listUserLogUrl,
                datatype: 'json',
                colNames: ['',
                    '@Html.DisplayNameFor(m => m.EngUserName)',
                    '',
                    '@Html.DisplayNameFor(m => m.Activity)',
                    '@Html.DisplayNameFor(m => m.Action)',
                    '@Html.DisplayNameFor(m => m.ActionedOn)',
                    '@Html.DisplayNameFor(m => m.Remark)'
                ],
                colModel: [{
                    name: 'logId',
                    hidden: true,
                    search: false
                }, {
                    name: 'engUserName',
                    index: 'user.engUserName',
                    width: 100
                }, {
                    name: 'recordKey',
                    hidden: true,
                    search: false
                }, {
                    name: 'activity',
                    width: 80
                }, {
                    name: 'action',
                    stype: 'select',
                    searchoptions: {
                        sopt: ['eq', 'ne'],
                        value: @Html.Raw(Json.Encode(Model.Actions))
                        },
                    width: 80
                }, {
                    name: 'actionedOn',
                    template: dateTimeTemplate,
                    width: 100
                }, {
                    name: 'remark',

                }],
                ondblClickRow: function (rowId, iRow, iCol, e) {
                    var data = $grid.jqGrid('getRowData', rowId);

                    if (data.activity == "Login / Logout") {
                        return;
                    }

                    if (data.recordKey == "" || data.recordKey == null) {
                        notifError("Record key cannot be found!");
                        return;
                    }

                    if (data.activity == "Organisation") {
                        var url = '@Url.RouteUrl("EditOrgMaster", new { code = -1 })';
                        url = url.replace("-1", data.recordKey);
                        location = url;
                    }
                    else if (data.activity == "Flag Day") {
                        var url = '@Url.RouteUrl("EditFdMaster", new { fdMasterId = "-1" })';
                        url = url.replace("-1", data.recordKey);
                        location = url;
                    }
                    else if (data.activity == "PSP") {
                        var url = '@Url.RouteUrl("EditPsp", new { pspMasterId = "-1" })';
                        url = url.replace("-1", data.recordKey);
                        location = url;
                    }
                    else if (data.activity == "Complaint") {
                        var url = '@Url.RouteUrl("EditEnquiryComplaint", new { complaintId = -1 })';
                        url = url.replace("-1", data.recordKey);
                        location = url;
                    }
                    else if (data.activity == "Suggestion") {
                        var url = '@Url.RouteUrl("NewSuggestionMaster", new { code = -1 })';
                            url = url.replace("-1", data.recordKey);
                            location = url;
                        }

                }, loadComplete: defaultGridLoadComplete
            });

            //navButtons
    $grid.jqGrid('navGrid', pager_selector, {
        //navbar options
        search: true,
        refresh: true
    }, {}, {}, {}, {
        //search form
        recreateForm: true,
        afterShowSearch: defaultSearchFormAfterShowSearch,
        afterRedraw: defaultSearchFormAfterRedraw
    }, {});

    function doShowModal() {
        $('.alert.alert-block.alert-warning.validation-summary-errors').remove();

        $('#editModal').modal({
            backdrop: 'static',
            show: true,
            keyboard: false
        });
    };

};
    </script>
}